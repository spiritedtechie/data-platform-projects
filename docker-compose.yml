services:
  postgres:
    image: postgres:15
    restart: always
    expose:
      - 5432
    ports:
      - 5432:5432
    volumes:
      - ./pg-init-scripts:/docker-entrypoint-initdb.d
      - postgres-volume:/var/lib/postgresql/data
    networks:
      - network
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    command:
      - "postgres"
      - "-c"
      - "wal_level=logical"

  metabase:
    image: metabase/metabase:latest
    depends_on:
      - postgres
    expose:
      - "3001"
    ports:
      - "3000:3000"
    networks:
      - network
    environment:
      MB_DB_TYPE: postgres 
      MB_DB_DBNAME: metabase
      MB_DB_PORT: 5432
      MB_DB_USER: metabase_user
      MB_DB_PASS: metabase
      MB_DB_HOST: postgres

  zookeeper:
    image: docker.io/bitnami/zookeeper:3.9
    restart: always
    ports:
      - "2181:2181"
      - "2888:2888"
      - "3888:3888"
    networks:
      - network
    volumes:
      - "zookeeper-volume:/bitnami"
    environment:
      ALLOW_ANONYMOUS_LOGIN: yes

  kafka:
    image: docker.io/bitnami/kafka:3.4
    restart: always
    ports:
      - "9093:9093"
    networks:
      - network
    volumes:
      - "kafka-volume:/bitnami"
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_LISTENERS=CLIENT://:9092,EXTERNAL://:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=CLIENT://kafka:9092,EXTERNAL://localhost:9093
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CLIENT:PLAINTEXT,EXTERNAL:PLAINTEXT
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=CLIENT
    depends_on:
      - zookeeper

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    ports:
      - 8080:8080
    networks:
      - network
    environment:
      DYNAMIC_CONFIG_ENABLED: 'true'
      KAFKA_CLUSTERS_0_NAME: "data-platform-cluster"
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092
    depends_on:
      - kafka
   
  debezium-connect:
    image: debezium/connect:2.3.3.Final
    restart: always
    ports:
     - 8083:8083
    networks:
      - network
    links:
     - kafka
     - postgres
    environment:
     - BOOTSTRAP_SERVERS=kafka:9092
     - GROUP_ID=1
     - CONFIG_STORAGE_TOPIC=dbz_connect_configs
     - OFFSET_STORAGE_TOPIC=dbz_connect_offsets
     - STATUS_STORAGE_TOPIC=dbz_connect_statuses
    depends_on:
      - kafka
      - postgres
  
  debezium-ui:
    image: debezium/debezium-ui:2.4
    # No Arm image for Macs yet 
    platform: linux/x86_64
    ports:
      - "8081:8080"
    environment:
      - KAFKA_CONNECT_URIS=http://debezium-connect:8083
    depends_on:
      - debezium-connect
    networks:
      - network

volumes:
  postgres-volume:
  kafka-volume:
  zookeeper-volume:

networks:
  network: